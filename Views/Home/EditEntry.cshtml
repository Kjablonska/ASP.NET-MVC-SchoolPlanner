@model EditEntryViewModel

@functions{
    public object getEventParameters() {
        var room = Context.Request.Query["room"].ToString();
        var day = Context.Request.Query["day"].ToString();
        var slot = int.Parse(Context.Request.Query["slot"].ToString());

        return new {
            room,
            slot,
            day,
        };
    }
}


<form method="post" action="@Url.Action("SaveEntry")">
<div class="container">
    <table class="table">
        <tr>
            <th><label for="room">Room</label></th>
            <th>
                <input type="text" id="room" name="room" style = "width:120px" value=@(Context.Request.Query["room"].ToString()) readonly>
            </th>
        </tr>
        <tr>
            <th><label for="room">Slot</label></th>
            <th>
                <input type="text" id="slot" name="slot" style = "width:120px" value=@(Context.Request.Query["slot"].ToString()) readonly>
            </th>
        </tr>
        <tr>
            <th><label for="room">Day</label></th>
            <th>
                <input type="text" id="day" name="day" style = "width:120px" value=@(Context.Request.Query["day"].ToString()) readonly>
            </th>
        </tr>
        <tr>
            <th>Group</th>
            <th>
                @{
                    @Html.DropDownList("group", (SelectList)@Model.groupsItems, new { style = "width:120px", onchange="selectedGroup=this.value"})
                }
            </th>
        </tr>
        <tr>
            <th>Teacher</th>
            <th>
                @{
                    @Html.DropDownList("teacher", (SelectList)@Model.teachersItems, new { style = "width:120px"})
                }
            </th>
        </tr>
        <tr>
            <th>Class</th>
            <th>
                @{
                    @Html.DropDownList("class", (SelectList)@Model.classesItems, new { style = "width:120px"})
                }
            </th>
        </tr>
    </table>
</div>

<input type="submit">
</form>

<form action=@Url.Action("UnassignEntry", getEventParameters()) method="post">
    <button name=Unassign>Unassign</button>
</form>

<a href=@Url.Action("Index", new {room = @Context.Request.Query["room"].ToString()})>
    <button method="post" class="button">Cancel</button>
</a>
